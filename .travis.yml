dist: bionic
language: generic

services:
  - docker

cache:
  directories:
    - $HOME/.stack

env:
  global:
  - NJOBS="2"
  matrix:
  - COQ_IMAGE="coqorg/coq:dev"
  - COQ_IMAGE="coqorg/coq:latest"

before_install:
  # Download and unpack the stack executable
  - mkdir -p ~/.local/bin
  - export PATH=$HOME/.local/bin:$PATH
  - travis_retry curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'

install: |
  # Prepare the COQ container
  docker run -d -i --init --name=COQ -v ${TRAVIS_BUILD_DIR}:/home/coq/demo -w /home/coq/demo ${COQ_IMAGE}
  docker exec COQ /bin/bash --login -c "
    # This bash script is double-quoted to interpolate Travis CI env vars:
    echo \"Build triggered by ${TRAVIS_EVENT_TYPE}\"
    export PS4='+ \e[33;1m(\$0 @ line \$LINENO) \$\e[0m '
    set -ex  # -e = exit on failure; -x = trace for debug
    #opam update -y
    opam config list
    opam repo list
    opam list
    "
before_script:
- |
  docker exec COQ /bin/bash --login -c "
    export PS4='+ \e[33;1m(\$0 @ line \$LINENO) \$\e[0m '
    sudo chown -R coq:coq /home/coq/demo
    "
script:
- echo -e "${ANSI_YELLOW}Building ${TRAVIS_REPO_SLUG}...${ANSI_RESET}" && echo -en 'travis_fold:start:build\\r'
- |
  docker exec COQ /bin/bash --login -c "
    export PS4='+ \e[33;1m(\$0 @ line \$LINENO) \$\e[0m '
    set -ex
    make -j${NJOBS} -k coq mail-test/extract
    chmod -R a+rw .
    "
- make bin/mclnt bin/gomail
- cd mail-test
- stack --allow-different-user build
- echo -en 'travis_fold:end:build\\r'

after_script:
- docker stop COQ
