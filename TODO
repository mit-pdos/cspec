Things to clean up:

- move Hoare specs of an API (such as src/TwoDisk/TwoDiskTheorems.v) into the next level up,
  because they are simply helpers for the next layer.

- get rid of preconditions from prog_spec?
  see commit acdfaf460b8cbe180959192f1da3b8cb03ca4409

- mechanically check assumed facts to make sure students didn't state some axiom (e.g., Axiom False)
  or import NoCrashes when we wanted them to prove crashes.  (use Print Assumptions ...)

- RemappedDisk: make sure that we can replace the abstraction relation with an abstraction function
  as defined in the [init] part of the proof at the bottom of RemappedDiskImpl.v.

- students need to install haskell-stack

- Why [prog_spec] is useful: avoid having to reason about execution of functions twice
  (once for normal execution -- postcondition, and once for crashes -- recovery condition).
  That ends up with a quadratic number of subgoals.

===

summer school schedule:

day 1: FSCQ talk
  in-class refinement: StatDB
  assign: bad sector lab to understand disks, etc

night 1: work on bad sector lab

day 2: talk about bad sector lab solutions
  start talking about crash refinement
  assign: replication lab to understand crashes

night 2: work on replication lab (pre-crash?)

day 3: talk about replication lab, valuset/history, ..
  CHL paper tidbits but not the full paper

night 3: more replication lab (crashes)

day 4: finish replication / crash story
  Yggdrasil

